# --- PropBot runtime profile & service host ---
# WARNING: PROFILE=live together with SAFE_MODE=false and DRY_RUN_ONLY=false will place
# real orders on the connected exchange. Always boot in HOLD/SAFE_MODE=true, inspect
# limits and balances, then disable HOLD only after a deliberate two-operator resume.
APP_ENV=local                     # Arbitrary environment label for logs/systemd units
DEFAULT_PROFILE=paper             # Default config bundle (paper|testnet|live)
API_HOST=127.0.0.1                # Host/IP for local uvicorn (0.0.0.0 to expose publicly)
API_PORT=8000                     # HTTP port for FastAPI
PROFILE=paper                     # Broker profile used to load configs
MODE=paper                        # Deployment label displayed in status/ops report
SAFE_MODE=true                    # Blocks live order placement when true
DRY_RUN_ONLY=false                # Forces the in-memory simulator regardless of PROFILE
DRY_RUN_MODE=false                # Simulate hedge execution without sending exchange orders
TWO_MAN_RULE=true                 # Require manual approvals before resuming RUN
AUTOPILOT_ENABLE=false            # Allow autonomous resume from HOLD when explicitly enabled
POST_ONLY=true                    # Submit post-only orders where supported
REDUCE_ONLY=false                 # Restrict orders to position-reducing actions
ENABLE_PLACE_TEST_ORDERS=false    # Allow Binance testnet order placement when SAFE_MODE=false
ORDER_NOTIONAL_USDT=50            # Default loop order size in USDT
MAX_SLIPPAGE_BPS=2                # Maximum allowed execution slippage (basis points)
MIN_SPREAD_BPS=0.0                # Minimum spread required to trade (basis points)
TAKER_FEE_BPS_BINANCE=2           # Expected taker fee for Binance (bps)
TAKER_FEE_BPS_OKX=2               # Expected taker fee for OKX (bps)
POLL_INTERVAL_SEC=5               # Loop sleep interval between cycles (seconds)
LOOP_PAIR=                        # Optional fixed trading pair (e.g. BTCUSDT)
LOOP_VENUES=                      # Optional comma-separated venue list (e.g. binance-um,okx-perp)
MAX_ORDERS_PER_MIN=300            # Runaway breaker: maximum orders submitted per rolling minute
MAX_CANCELS_PER_MIN=600           # Runaway breaker: maximum cancels issued per rolling minute

# --- Risk flags & caps ---
RISK_CHECKS_ENABLED=false         # Master feature flag for risk governor/accounting enforcement
RISK_ENFORCE_CAPS=false           # Enforce open-trade & notional caps (aka ENFORCE_MAX_OPEN_TRADES / ENFORCE_MAX_NOTIONAL_USDT)
ENFORCE_MAX_OPEN_TRADES=false     # Documentation alias – set RISK_ENFORCE_CAPS=true to activate
MAX_OPEN_POSITIONS=5              # Maximum simultaneous trades (UI exports as max_open_trades_limit)
MAX_OPEN_TRADES=5                 # Documentation alias – keep in sync with MAX_OPEN_POSITIONS
MAX_TOTAL_NOTIONAL_USDT=75000     # Aggregate open notional cap across venues (USDT)
MAX_TOTAL_NOTIONAL_USD=0          # Optional legacy alias for total notional cap (USD)
ENFORCE_MAX_NOTIONAL_USDT=false   # Documentation alias – enforcement piggybacks on RISK_ENFORCE_CAPS
ENFORCE_DAILY_LOSS_CAP=false      # Enables runtime enforcement of the daily loss cap (DAILY_LOSS_CAP_ENABLED)
DAILY_LOSS_CAP_ENABLED=false      # Documentation alias – mirrors ENFORCE_DAILY_LOSS_CAP
DAILY_LOSS_CAP_USDT=0             # Global realized PnL cap in USDT (DAILY_LOSS_USDT, 0 disables)
DAILY_LOSS_USDT=0                 # Documentation alias – keep in sync with DAILY_LOSS_CAP_USDT
DAILY_LOSS_CAP_AUTO_HOLD=false    # Automatically engage HOLD when the daily loss cap is breached
MAX_POSITION_USDT=25000           # Default per-symbol notional cap (USDT)
MAX_POSITION_USDT__BTCUSDT=50000  # Example override for BTCUSDT
MAX_OPEN_ORDERS=5                 # Default maximum outstanding orders across venues
MAX_OPEN_ORDERS__binance-um=10    # Example venue-specific override
MAX_DAILY_LOSS_USDT=2500          # Absolute drawdown stop before auto-HOLD (legacy risk guard)
MAX_UNREALIZED_LOSS_USD=0         # Unrealized loss cap before auto-HOLD (USD, 0 disables)
CLOCK_SKEW_HOLD_THRESHOLD_MS=200  # Auto-HOLD if |clock skew| exceeds this threshold (ms)

# --- Daily PnL & reporting ---
EXCLUDE_DRY_RUN_FROM_PNL=true     # Drop simulated fills from strategy PnL aggregates
STRATEGY_BUDGET_FILE=             # Optional override for StrategyBudgetManager JSON (defaults to runtime_state)

# --- Autopilot guard & watchdog ---
AUTOPILOT_GUARD_INTERVAL_SEC=5    # Evaluation interval for the autopilot guard (seconds)
AUTOPILOT_GUARD_ENABLED=true      # Documentation flag – guard always loads; disable by removing startup hook
WATCHDOG_ENABLED=false            # Enable the exchange watchdog heartbeat daemon
WATCHDOG_INTERVAL_SEC=7           # Seconds between watchdog heartbeat checks
WATCHDOG_AUTO_HOLD=false          # Automatically engage HOLD when watchdog degrades
NOTIFY_WATCHDOG=false             # Emit ops alerts for watchdog transitions
WATCHDOG_BASE_URL=                # Optional override for watchdog webhook callbacks

# --- Observability ---
PROMETHEUS_ENABLED=true           # Prometheus endpoint is always on; flag kept for documentation completeness
SLO_EXPORT_ENABLED=true           # Export SLO metrics to `/metrics`
FEATURE_SLO=0                     # Включить фоновую проверку SLO (1 активирует монитор)
SLO_LATENCY_P95_TARGET_MS=250     # Целевое p95 время ответа (мс) для UI/core
SLO_ERROR_RATE_TARGET=0.02        # Допустимая доля ошибок (0..1)
SLO_EVALUATION_INTERVAL_SEC=60    # Интервал между проверками SLO (секунды)
SMOKE_HOST=http://127.0.0.1:8000  # Базовый URL для scripts/smoke.sh
SMOKE_TIMEOUT=5                   # Таймаут curl в секундах для smoke-шагов

# --- Chaos testing ---
FEATURE_CHAOS=0                   # Enable chaos injection for exchange adapters
CHAOS_PROFILE=                    # Name of chaos profile from configs/fault_profiles.yaml
CHAOS_WS_DROP_P=0.0               # Probability of dropping websocket updates (0..1)
CHAOS_REST_TIMEOUT_P=0.0          # Probability of simulating REST timeout (0..1)
CHAOS_ORDER_DELAY_MS=0            # Artificial delay (ms) before order/cancel operations

# --- Cross-exchange hedging ---
MAX_NOTIONAL_PER_POSITION_USDT=25000  # Per-position notional cap for hedges (USDT)
MAX_LEVERAGE=5                    # Maximum leverage allowed for hedges
SCAN_INTERVAL_SEC=5               # Opportunity scanner interval (seconds)
SCAN_LEVERAGE_SUGGESTION=1.0      # Default leverage suggestion for scanned opportunities
AUTO_HEDGE_ENABLED=false          # Enable automatic hedge execution daemon
AUTO_HEDGE_SCAN_SECS=2            # Auto hedge scan interval (seconds)
MAX_AUTO_FAILS_PER_MIN=3          # Failure threshold per minute before auto-HOLD

# --- Authentication & rate limits ---
AUTH_ENABLED=true                 # Require API_TOKEN for mutating routes when true
API_TOKEN=change-me               # Bearer token for CLI / API clients
IDEM_TTL_SEC=600                  # Idempotency cache TTL in seconds
API_RATE_PER_MIN=30               # Rate limit refill tokens per minute
API_BURST=10                      # Maximum burst tokens for rate limiting
APPROVE_TOKEN=                    # Two-man resume approval token (required for /resume-confirm)
SECRETS_STORE_PATH=./data/secrets_store.json  # Path to JSON secrets store consumed by SecretsStore (never commit)
SECRETS_ENC_KEY="change-me"       # Optional XOR/base64 placeholder key for encrypting secrets at rest

# --- Telegram control bot ---
TELEGRAM_ENABLE=false             # Enable Telegram control/ops alerts bot
TELEGRAM_BOT_TOKEN=               # Bot token issued by @BotFather
TELEGRAM_CHAT_ID=                 # Authorised chat/user ID for commands & alerts
TELEGRAM_PUSH_MINUTES=5           # Interval between automatic status messages

# --- Runtime persistence ---
RUNTIME_STATE_PATH=./data/runtime_state.json  # File storing last applied control snapshot
POSITIONS_STORE_PATH=data/hedge_positions.json  # Persistent cross-exchange hedge positions ledger
PNL_HISTORY_PATH=data/pnl_history.json  # Rolling exposure / PnL history snapshots for the operator dashboard
STRATEGY_PNL_STATE_PATH=data/strategy_pnl.json  # Persistent strategy PnL tracker store
HEDGE_LOG_PATH=data/hedge_log.json     # Optional hedge execution audit log
OPS_ALERTS_FILE=data/ops_alerts.json   # Optional ops alerts export

# --- Binance UM testnet credentials ---
BINANCE_UM_API_KEY_TESTNET=       # Binance UM testnet API key
BINANCE_UM_API_SECRET_TESTNET=    # Binance UM testnet API secret
BINANCE_UM_BASE_TESTNET=https://testnet.binancefuture.com  # Optional custom testnet base URL

# --- Binance Futures live credentials (REAL FUNDS) ---
BINANCE_LV_API_KEY=               # Binance Futures live API key (protect carefully)
BINANCE_LV_API_SECRET=            # Binance Futures live API secret
BINANCE_LV_BASE_URL=https://fapi.binance.com  # Optional custom live base URL
BINANCE_LV_API_KEY_TESTNET=       # Optional placeholder for segregated live/test configs
BINANCE_LV_API_SECRET_TESTNET=

# --- Binance hedge executor credentials (used for cross-exchange futures) ---
BINANCE_API_KEY=                  # Optional fallback Binance API key for local dev (SecretsStore preferred)
BINANCE_API_SECRET=               # Optional fallback Binance API secret for local dev (SecretsStore preferred)
BINANCE_FUTURES_API_URL=https://fapi.binance.com  # Optional override of the Binance futures REST base URL

# --- OKX testnet credentials (optional) ---
OKX_API_KEY_TESTNET=
OKX_API_SECRET_TESTNET=
OKX_API_PASSPHRASE_TESTNET=

# --- OKX hedge executor credentials ---
OKX_API_KEY=                      # Optional fallback OKX API key for local dev (SecretsStore preferred)
OKX_API_SECRET=                   # Optional fallback OKX API secret for local dev (SecretsStore preferred)
OKX_API_PASSPHRASE=               # Optional fallback OKX API passphrase for local dev (SecretsStore preferred)
OKX_FUTURES_API_URL=https://www.okx.com  # Optional override of the OKX REST base URL
